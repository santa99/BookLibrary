@model IEnumerable<Contracts.Models.BookModel>
@{
    ViewBag.Title = "Home page";
}

<html lang="sk">
<head>
    <title>@ViewData["appTitle"]</title>
    <meta charset="utf-8"/>
    <link href="~/StyleSheet.css" rel="stylesheet"/>
</head>
<body>
<div class="page-content">


    <h2>@ViewBag.Title</h2>

    <div>
        User: [
        @{
            var @user = ViewBag?.User;
        }

        @user
        @if (ViewBag?.User != null)
        {
            @Html.ActionLink("LogOut", "Logout", "Account",
                new { returnUrl = "/" })
            ;
        }
        else
        {
            @Html.ActionLink("LogIn", "Login", "Account",
                new { returnUrl = "/" })
            ;
        }
        ]
    </div>

    <hr/>

    <div class="nav">
        @if (@Model != null)
        {
            @Html.ActionLink("Insert Book", "EditBook", "Home", new { bookId = -1 })
        }
    </div>

    @if (@ViewData["errorMessage"] != null)
    {
        <h3>Exception state:</h3>
        <h4 style="color: red">@ViewData["errorMessage"]</h4>
    }

    @if (@Model != null)
    {
        <div class="form-horizontal">
            <hr/>
            <div class="form-group">
                <table class="table table-responsive" style="width:100%">
                    <tr style="text-align: left;">
                        <th>
                            @Html.DisplayNameFor(model => model.Id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Author)
                        </th>
                        <th>
                            Edit
                        </th>
                        <th>
                            Actions
                        </th>
                    </tr>
                    @foreach (var item in Model)
                    {
                        <tr style="text-align: left;">
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Author)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "EditBook", "Home",
                                    new { bookId = item.Id }) /
                                @Html.ActionLink("Remove", "RemoveBook", "Home",
                                    new { bookId = item.Id })
                            </td>
                            <td>
                                @if (item.Borrowed != null)
                                {
                                    @Html.ActionLink("Return book", "ReturnBook", "Home",
                                        new { bookId = item.Id })
                                    var borrowedBy = "'" + item.Borrowed.FirstName + " " + item.Borrowed.LastName + "' borrowed on [" + item.Borrowed.From.ToString("dd MMMM yyyy") + "]"; 
                                    <div>
                                        @borrowedBy
                                    </div>
                                }
                                else
                                {
                                    @Html.ActionLink("Borrow book", "BorrowBook", "Home",
                                        new { bookId = item.Id })
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    }

</div>
</body>
</html>